/*
 * foreign_jounarl User
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A AddUserApiController binds http requests to an api service and writes the service results to the http response
type AddUserApiController struct {
	service AddUserApiServicer
}

// NewAddUserApiController creates a default api controller
func NewAddUserApiController(s AddUserApiServicer) Router {
	return &AddUserApiController{ service: s }
}

// Routes returns all of the api route for the AddUserApiController
func (c *AddUserApiController) Routes() Routes {
	return Routes{ 
		{
			"UserAddPost",
			strings.ToUpper("Post"),
			"/api/user/add",
			c.UserAddPost,
		},
	}
}

// UserAddPost - create a new user
func (c *AddUserApiController) UserAddPost(w http.ResponseWriter, r *http.Request) { 
	user := &User{}
	if err := json.NewDecoder(r.Body).Decode(&user); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.UserAddPost(*user)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}
